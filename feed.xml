<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://hsinaditam.github.io/Danish_Cookies/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hsinaditam.github.io/Danish_Cookies/" rel="alternate" type="text/html" /><updated>2022-08-30T15:23:11-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/feed.xml</id><title type="html">Danish Cookies</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Title</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/30/vocab-test.html" rel="alternate" type="text/html" title="Title" /><published>2022-08-30T00:00:00-05:00</published><updated>2022-08-30T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/30/vocab-test</id><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Title</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/30/bash-output.html" rel="alternate" type="text/html" title="Title" /><published>2022-08-30T00:00:00-05:00</published><updated>2022-08-30T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/30/bash-output</id><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Python Kernel</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/29/Python-kernel.ipynb" rel="alternate" type="text/html" title="Python Kernel" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/29/Python-kernel</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "markdown", "metadata": {}, "source": [ "# \"Fastpage Test\"\n", "> \"Testing if i setup the fastpage correctly\"\n", "\n", "- toc: false\n", "- branch: master\n", "- badges: true\n", "- comments: true\n", "- author: Mati Danish\n", "- categories: [fastpages, jupyter]" ] }, { "cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": [] } ], "metadata": { "kernelspec": { "display_name": "Python 3.10.1 64-bit", "language": "python", "name": "python3" }, "language_info": { "name": "python", "version": "3.10.1" }, "orig_nbformat": 4, "vscode": { "interpreter": { "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49" } } }, "nbformat": 4, "nbformat_minor": 2 }]]></summary></entry><entry><title type="html">Bash Tool Check</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/29/bash-tool-check.ipynb" rel="alternate" type="text/html" title="Bash Tool Check" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/29/bash-tool-check</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": [ "# \"Fastpage Test\"\n", "> \"Testing if i setup the fastpage correctly\"\n", "\n", "- toc: false\n", "- branch: master\n", "- badges: true\n", "- comments: true\n", "- author: Mati Danish\n", "- categories: [fastpages, jupyter]" ] }, { "cell_type": "code", "execution_count": 1, "metadata": {}, "outputs": [ { "ename": "SyntaxError", "evalue": "invalid syntax (419063976.py, line 1)", "output_type": "error", "traceback": [ "\u001b[0;36m Input \u001b[0;32mIn [1]\u001b[0;36m\u001b[0m\n\u001b[0;31m echo \"Using conditional statement to create a project directory and project\"\u001b[0m\n\u001b[0m ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n" ] } ], "source": [ "echo \"Using conditional statement to create a project directory and project\"\n", "\n", "# Variable section\n", "export project_dir=$HOME/vscode # change vscode to different name to test git clone\n", "export project=$project_dir/APCSP # change APCSP to name of project from git clone\n", "export project_repo=\"https://github.com/nighthawkcoders/APCSP.git\" # change to project of choice\n", "\n", "cd ~ # start in home directory\n", "\n", "# Conditional block to make a project directory\n", "if [ ! -d $project_dir ]\n", "then \n", " echo \"Directory $project_dir does not exists... makinng directory $project_dir\"\n", " mkdir -p $project_dir\n", "fi\n", "echo \"Directory $project_dir exists.\" \n", "\n", "# Conditional block to git clone a project from project_repo\n", "if [ ! -d $project ]\n", "then\n", " echo \"Directory $project does not exists... cloning $project_repo\"\n", " cd $project_dir\n", " git clone $project_repo\n", " cd ~\n", "fi\n", "echo \"Directory $project exists.\"\n", "echo \"Navigate to project, then navigate to area wwhere files were cloned\"\n", "cd $project\n", "pwd\n", "\n", "echo \"\"\n", "echo \"list top level or root of files with project pulled from github\"\n", "ls\n", "\n", "echo \"\"\n", "echo \"list again with hidden files pulled from github\"\n", "ls -a # hidden files flag, many shell commands have flags\n", "\n", "echo \"\"\n", "echo \"list all files in long format\"\n", "ls -al # all files and long listing\n", "echo \"Look for posts\"\n", "export posts=$project/_posts # _posts inside project\n", "cd $posts # this should exist per fastpages\n", "pwd # present working directory\n", "ls -l # list posts\n", "echo \"Look for notebooks\"\n", "export notebooks=$project/_notebooks # _notebooks is inside project\n", "cd $notebooks # this should exist per fastpages\n", "pwd # present working directory\n", "ls -l # list notebooks\n", "echo \"Look for images in notebooks, print working directory, list files\"\n", "cd $notebooks/images # this should exist per fastpages\n", "pwd\n", "ls -l\n", "echo \"Navigate to project, then navigate to area wwhere files were cloned\"\n", "\n", "cd $project\n", "echo \"show the contents of README.md\"\n", "echo \"\"\n", "\n", "cat README.md # show contents of file, in this case markdown\n", "echo \"\"\n", "echo \"end of README.md\"\n", "echo \"Show the shell environment variables, key on left of equal value on right\"\n", "echo \"\"\n", "\n", "env\n", "cd $project\n", "\n", "echo \"\"\n", "echo \"show the secrets of .git\"\n", "cd .git\n", "ls -l\n", "\n", "echo \"\"\n", "echo \"look at config file\"\n", "cat config\n", "cd /tmp\n", "\n", "file=\"sample.md\"\n", "if [ -f \"$file\" ]; then\n", " rm $file\n", "fi\n", "\n", "tee -a $file >/dev/null >) redirection operator.\" >> $file\n", "echo \"- The list definition, as is, is using space to seperate lines. Thus the use of commas and hyphens in output.\" >> $file\n", "actions=(\"ls,list-directory\" \"cd,change-directory\" \"pwd,present-working-directory\" \"if-then-fi,test-condition\" \"env,bash-environment-variables\" \"cat,view-file-contents\" \"tee,write-to-output\" \"echo,display-content-of-string\" \"echo_text_>\\$file,write-content-to-file\" \"echo_text_>>\\$file,append-content-to-file\")\n", "for action in ${actions[@]}; do # for loop is very similar to other language, though [@], semi-colon, do are new\n", " action=${action//-/ } # convert dash to space\n", " action=${action//,/: } # convert comma to colon\n", " action=${action//_text_/ \\\"sample text\\\" } # convert _text_ to sample text, note escape character \\ to avoid \"\" having meaning\n", " echo \" - ${action//-/ }\" >> $file # echo is redirected to file with >>\n", "done\n", "\n", "echo \"\"\n", "echo \"File listing and status\"\n", "ls -l $file # list file\n", "wc $file # show words\n", "mdless $file # this requires installation, but renders markown from terminal\n", "\n", "rm $file # clean up termporary file" ] }, { "cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": [ "# \"Fastpage Test\"\n", "> \"Testing if i setup the fastpage correctly\"\n", "\n", "- toc: false\n", "- branch: master\n", "- badges: true\n", "- comments: true\n", "- author: Mati Danish\n", "- categories: [fastpages, jupyter]" ] } ], "metadata": { "kernelspec": { "display_name": "Python 3.10.1 64-bit", "language": "python", "name": "python3" }, "language_info": { "codemirror_mode": { "name": "ipython", "version": 3 }, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.10.1" }, "orig_nbformat": 4, "vscode": { "interpreter": { "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49" } } }, "nbformat": 4, "nbformat_minor": 2 }]]></summary></entry><entry><title type="html">Title</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/29/bash-tutorial.html" rel="alternate" type="text/html" title="Title" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/29/bash-tutorial</id><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry></feed>