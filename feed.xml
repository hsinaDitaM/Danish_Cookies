<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://hsinaditam.github.io/Danish_Cookies/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hsinaditam.github.io/Danish_Cookies/" rel="alternate" type="text/html" /><updated>2022-08-29T16:24:09-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/feed.xml</id><title type="html">Danish Cookies</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Vocab Test</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/29/vocab-test.ipynb" rel="alternate" type="text/html" title="Vocab Test" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/29/vocab-test</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "code", "execution_count": 4, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Hello, matidanish running /usr/local/bin/python3\n", "You will be asked 1 questions.\n", "Question: Are you ready to take a test?\n", "Question: What is def used for?\n", "to define a variable is correct!\n", "matidanish you scored 1/1\n" ] } ], "source": [ "import getpass, sys\n", "\n", "def question_with_response(prompt):\n", " print(\"Question: \" + prompt)\n", " msg = input()\n", " return msg\n", "\n", "questions = 1\n", "correct = 0\n", "\n", "print('Hello, ' + getpass.getuser() + \" running \" + sys.executable)\n", "print(\"You will be asked \" + str(questions) + \" questions.\")\n", "rsp = question_with_response(\"Are you ready to take a test?\")\n", "\n", "rsp = question_with_response(\"What is def used for?\")\n", "if rsp == \"to define a variable\":\n", " print(rsp + \" is correct!\")\n", " correct += 1\n", "else:\n", " print(rsp + \" is incorrect!\")\n", "\n", "\n", "print(getpass.getuser() + \" you scored \" + str(correct) +\"/\" + str(questions))" ] } ], "metadata": { "kernelspec": { "display_name": "Python 3.10.1 64-bit", "language": "python", "name": "python3" }, "language_info": { "name": "python", "version": "3.10.1" }, "orig_nbformat": 4, "vscode": { "interpreter": { "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49" } } }, "nbformat": 4, "nbformat_minor": 2 }]]></summary></entry><entry><title type="html">Bash Tutorial</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/29/bash-tutorial.ipynb" rel="alternate" type="text/html" title="Bash Tutorial" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/29/bash-tutorial</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "code", "execution_count": 1, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Using conditional statement to create a project directory and project\n", "Directory /Users/matidanish/vscode exists.\n", "Directory /Users/matidanish/vscode/APCSP exists.\n" ] } ], "source": [ "echo \"Using conditional statement to create a project directory and project\"\n", "\n", "# Variable section\n", "export project_dir=$HOME/vscode # change vscode to different name to test git clone\n", "export project=$project_dir/APCSP # change APCSP to name of project from git clone\n", "export project_repo=\"https://github.com/nighthawkcoders/APCSP.git\" # change to project of choice\n", "\n", "cd ~ # start in home directory\n", "\n", "# Conditional block to make a project directory\n", "if [ ! -d $project_dir ]\n", "then \n", " echo \"Directory $project_dir does not exists... makinng directory $project_dir\"\n", " mkdir -p $project_dir\n", "fi\n", "echo \"Directory $project_dir exists.\" \n", "\n", "# Conditional block to git clone a project from project_repo\n", "if [ ! -d $project ]\n", "then\n", " echo \"Directory $project does not exists... cloning $project_repo\"\n", " cd $project_dir\n", " git clone $project_repo\n", " cd ~\n", "fi\n", "echo \"Directory $project exists.\"" ] }, { "cell_type": "code", "execution_count": 2, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Navigate to project, then navigate to area wwhere files were cloned\n", "/Users/matidanish/vscode/APCSP\n", "\n", "list top level or root of files with project pulled from github\n", "Gemfile\t\t\t_includes\t\t_word\n", "LICENSE\t\t\t_layouts\t\tassets\n", "Makefile\t\t_notebooks\t\tdocker-compose.yml\n", "README.md\t\t_pages\t\t\timages\n", "_action_files\t\t_plugins\t\tindex.html\n", "_config.yml\t\t_posts\t\t\tpython\n", "_fastpages_docs\t\t_sass\n", "\n", "list again with hidden files pulled from github\n", ".\t\t\tMakefile\t\t_posts\n", "..\t\t\tREADME.md\t\t_sass\n", ".devcontainer.json\t_action_files\t\t_word\n", ".git\t\t\t_config.yml\t\tassets\n", ".gitattributes\t\t_fastpages_docs\t\tdocker-compose.yml\n", ".github\t\t\t_includes\t\timages\n", ".gitignore\t\t_layouts\t\tindex.html\n", ".vscode\t\t\t_notebooks\t\tpython\n", "Gemfile\t\t\t_pages\n", "LICENSE\t\t\t_plugins\n", "\n", "list all files in long format\n", "total 96\n", "drwxr-xr-x 28 matidanish staff 896 Aug 18 23:27 .\n", "drwxr-xr-x 4 matidanish staff 128 Aug 23 13:39 ..\n", "-rw-r--r-- 1 matidanish staff 420 Aug 18 23:27 .devcontainer.json\n", "drwxr-xr-x 15 matidanish staff 480 Aug 25 13:22 .git\n", "-rw-r--r-- 1 matidanish staff 84 Aug 18 23:27 .gitattributes\n", "drwxr-xr-x 4 matidanish staff 128 Aug 18 23:27 .github\n", "-rw-r--r-- 1 matidanish staff 917 Aug 18 23:27 .gitignore\n", "drwxr-xr-x 3 matidanish staff 96 Aug 18 23:27 .vscode\n", "-rwxr-xr-x 1 matidanish staff 1304 Aug 18 23:27 Gemfile\n", "-rw-r--r-- 1 matidanish staff 11351 Aug 18 23:27 LICENSE\n", "-rwxr-xr-x 1 matidanish staff 1422 Aug 18 23:27 Makefile\n", "-rwxr-xr-x 1 matidanish staff 3614 Aug 18 23:27 README.md\n", "drwxr-xr-x 18 matidanish staff 576 Aug 18 23:27 _action_files\n", "-rw-r--r-- 1 matidanish staff 3716 Aug 18 23:27 _config.yml\n", "drwxr-xr-x 24 matidanish staff 768 Aug 18 23:27 _fastpages_docs\n", "drwxr-xr-x 29 matidanish staff 928 Aug 18 23:27 _includes\n", "drwxr-xr-x 6 matidanish staff 192 Aug 18 23:27 _layouts\n", "drwxr-xr-x 12 matidanish staff 384 Aug 25 13:21 _notebooks\n", "drwxr-xr-x 9 matidanish staff 288 Aug 18 23:27 _pages\n", "drwxr-xr-x 4 matidanish staff 128 Aug 18 23:27 _plugins\n", "drwxr-xr-x 29 matidanish staff 928 Aug 18 23:27 _posts\n", "drwxr-xr-x 3 matidanish staff 96 Aug 18 23:27 _sass\n", "drwxr-xr-x 3 matidanish staff 96 Aug 18 23:27 _word\n", "drwxr-xr-x 4 matidanish staff 128 Aug 18 23:27 assets\n", "-rwxr-xr-x 1 matidanish staff 1136 Aug 18 23:27 docker-compose.yml\n", "drwxr-xr-x 51 matidanish staff 1632 Aug 18 23:27 images\n", "-rw-r--r-- 1 matidanish staff 1061 Aug 18 23:27 index.html\n", "drwxr-xr-x 3 matidanish staff 96 Aug 18 23:27 python\n" ] } ], "source": [ "echo \"Navigate to project, then navigate to area wwhere files were cloned\"\n", "cd $project\n", "pwd\n", "\n", "echo \"\"\n", "echo \"list top level or root of files with project pulled from github\"\n", "ls\n", "\n", "echo \"\"\n", "echo \"list again with hidden files pulled from github\"\n", "ls -a # hidden files flag, many shell commands have flags\n", "\n", "echo \"\"\n", "echo \"list all files in long format\"\n", "ls -al # all files and long listing" ] }, { "cell_type": "code", "execution_count": 1, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Look for posts\n", "bash: cd: /_posts: No such file or directory\n", "/Users/matidanish/vscode/Danish_Cookies/_posts\n", "total 72\n", "-rw-r--r-- 1 matidanish staff 1668 Aug 23 13:39 2022-08-19-fastpage-notebook-test.ipynb\n", "-rw-r--r-- 1 matidanish staff 196 Aug 23 13:39 2022-08-22-fastpage-post-test.md\n", "-rw-r--r-- 1 matidanish staff 326 Aug 25 13:59 2022-08-25-bash-output.md\n", "-rw-r--r-- 1 matidanish staff 743 Aug 29 13:22 2022-08-29-Python-kernel.ipynb\n", "-rw-r--r-- 1 matidanish staff 849 Aug 29 13:45 2022-08-29-Vocab-wk1.md\n", "-rw-r--r-- 1 matidanish staff 6034 Aug 29 14:08 2022-08-29-bash-tutorial.ipynb\n", "-rw-r--r-- 1 matidanish staff 1710 Aug 29 14:04 2022-08029-physics-test.ipynb\n", "-rw-r--r-- 1 matidanish staff 720 Aug 23 13:39 README.md\n" ] } ], "source": [ "echo \"Look for posts\"\n", "export posts=$project/_posts # _posts inside project\n", "cd $posts # this should exist per fastpages\n", "pwd # present working directory\n", "ls -l # list posts" ] }, { "cell_type": "code", "execution_count": 2, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Look for notebooks\n", "bash: cd: /_notebooks: No such file or directory\n", "/Users/matidanish/vscode/Danish_Cookies/_posts\n", "total 72\n", "-rw-r--r-- 1 matidanish staff 1668 Aug 23 13:39 2022-08-19-fastpage-notebook-test.ipynb\n", "-rw-r--r-- 1 matidanish staff 196 Aug 23 13:39 2022-08-22-fastpage-post-test.md\n", "-rw-r--r-- 1 matidanish staff 326 Aug 25 13:59 2022-08-25-bash-output.md\n", "-rw-r--r-- 1 matidanish staff 743 Aug 29 13:22 2022-08-29-Python-kernel.ipynb\n", "-rw-r--r-- 1 matidanish staff 849 Aug 29 13:45 2022-08-29-Vocab-wk1.md\n", "-rw-r--r-- 1 matidanish staff 6034 Aug 29 14:08 2022-08-29-bash-tutorial.ipynb\n", "-rw-r--r-- 1 matidanish staff 1710 Aug 29 14:04 2022-08029-physics-test.ipynb\n", "-rw-r--r-- 1 matidanish staff 720 Aug 23 13:39 README.md\n" ] } ], "source": [ "echo \"Look for notebooks\"\n", "export notebooks=$project/_notebooks # _notebooks is inside project\n", "cd $notebooks # this should exist per fastpages\n", "pwd # present working directory\n", "ls -l # list notebooks" ] }, { "cell_type": "code", "execution_count": 3, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Look for images in notebooks, print working directory, list files\n", "bash: cd: /_notebooks/images: No such file or directory\n", "/Users/matidanish/vscode/Danish_Cookies/_posts\n", "total 72\n", "-rw-r--r-- 1 matidanish staff 1668 Aug 23 13:39 2022-08-19-fastpage-notebook-test.ipynb\n", "-rw-r--r-- 1 matidanish staff 196 Aug 23 13:39 2022-08-22-fastpage-post-test.md\n", "-rw-r--r-- 1 matidanish staff 326 Aug 25 13:59 2022-08-25-bash-output.md\n", "-rw-r--r-- 1 matidanish staff 743 Aug 29 13:22 2022-08-29-Python-kernel.ipynb\n", "-rw-r--r-- 1 matidanish staff 849 Aug 29 13:45 2022-08-29-Vocab-wk1.md\n", "-rw-r--r-- 1 matidanish staff 6034 Aug 29 14:08 2022-08-29-bash-tutorial.ipynb\n", "-rw-r--r-- 1 matidanish staff 1710 Aug 29 14:04 2022-08029-physics-test.ipynb\n", "-rw-r--r-- 1 matidanish staff 720 Aug 23 13:39 README.md\n" ] } ], "source": [ "echo \"Look for images in notebooks, print working directory, list files\"\n", "cd $notebooks/images # this should exist per fastpages\n", "pwd\n", "ls -l" ] }, { "cell_type": "code", "execution_count": 4, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Navigate to project, then navigate to area wwhere files were cloned\n", "show the contents of README.md\n", "\n", "cat: README.md: No such file or directory\n", "\n", "end of README.md\n" ] } ], "source": [ "echo \"Navigate to project, then navigate to area wwhere files were cloned\"\n", "\n", "cd $project\n", "echo \"show the contents of README.md\"\n", "echo \"\"\n", "\n", "cat README.md # show contents of file, in this case markdown\n", "echo \"\"\n", "echo \"end of README.md\"" ] }, { "cell_type": "code", "execution_count": 5, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "Show the shell environment variables, key on left of equal value on right\n", "\n", "SHELL=/bin/zsh\n", "TMPDIR=/var/folders/sn/p8n7cy514fg8q1gp31wshf800000gn/T/\n", "CONDA_SHLVL=1\n", "PYTHONUNBUFFERED=1\n", "CONDA_PROMPT_MODIFIER=(base) \n", "ORIGINAL_XDG_CURRENT_DESKTOP=undefined\n", "MallocNanoZone=0\n", "PYDEVD_USE_FRAME_EVAL=NO\n", "PYTHONIOENCODING=utf-8\n", "USER=matidanish\n", "CONDA_EXE=/Users/matidanish/opt/anaconda3/bin/conda\n", "SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.QqtWSjbxoq/Listeners\n", "__CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0\n", "PAGER=cat\n", "VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess\n", "ELECTRON_RUN_AS_NODE=1\n", "_CE_CONDA=\n", "PATH=/Users/matidanish/opt/anaconda3/bin:/Users/matidanish/opt/anaconda3/condabin:/usr/local/bin:/Library/Frameworks/Python.framework/Versions/3.10/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/Library/Apple/usr/bin\n", "CONDA_PREFIX=/Users/matidanish/opt/anaconda3\n", "PWD=/Users/matidanish\n", "notebooks=/_notebooks\n", "VSCODE_HANDLES_UNCAUGHT_ERRORS=true\n", "XPC_FLAGS=0x0\n", "PS1=[PEXP\\[\\]ECT_PROMPT>\n", "_CE_M=\n", "XPC_SERVICE_NAME=0\n", "SHLVL=1\n", "HOME=/Users/matidanish\n", "APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1\n", "VSCODE_NLS_CONFIG={\"locale\":\"en-us\",\"availableLanguages\":{},\"_languagePackSupport\":true}\n", "CONDA_PYTHON_EXE=/Users/matidanish/opt/anaconda3/bin/python\n", "LOGNAME=matidanish\n", "LC_CTYPE=UTF-8\n", "VSCODE_IPC_HOOK=/Users/matidanish/Library/Application Support/Code/1.70.2-main.sock\n", "VSCODE_CODE_CACHE_PATH=/Users/matidanish/Library/Application Support/Code/CachedData/e4503b30fc78200f846c62cf8091b76ff5547662\n", "CONDA_DEFAULT_ENV=base\n", "VSCODE_PID=595\n", "posts=/_posts\n", "VSCODE_CWD=/\n", "_=/usr/bin/env\n", "OLDPWD=/Users/matidanish/vscode/Danish_Cookies/_posts\n" ] } ], "source": [ "echo \"Show the shell environment variables, key on left of equal value on right\"\n", "echo \"\"\n", "\n", "env" ] }, { "cell_type": "code", "execution_count": 6, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "\n", "show the secrets of .git\n", "bash: cd: .git: No such file or directory\n", "total 22752\n", "-rw------- 1 matidanish staff 1381 Feb 22 2022 20730661.kdbx\n", "-rw-r--r--@ 1 matidanish staff 368 Jan 16 2022 3.txt\n", "-rw-r--r--@ 1 matidanish staff 38 Jan 16 2022 4.txt\n", "-rw-r--r--@ 1 matidanish staff 92 Aug 23 19:02 5.txt\n", "-rw-r--r--@ 1 matidanish staff 430 Aug 23 19:02 6.txt\n", "-rw-r--r--@ 1 matidanish staff 3614 Aug 23 19:02 7.txt\n", "drwx------@ 11 matidanish staff 352 Jun 22 22:02 Applications\n", "drwxr-xr-x@ 4 matidanish staff 128 Jul 30 22:39 Applications (Parallels)\n", "-rw-r--r-- 1 matidanish staff 5945054 Sep 22 2019 Awe_Arc-pcU-zTs3mgk.mp4\n", "drwx------@ 7 matidanish staff 224 Jul 21 20:15 Creative Cloud Files\n", "drwx------@ 279 matidanish staff 8928 Aug 28 20:12 Desktop\n", "drwx------+ 32 matidanish staff 1024 Aug 10 18:12 Documents\n", "drwx------@ 284 matidanish staff 9088 Aug 29 13:56 Downloads\n", "drwx------@ 23 matidanish staff 736 Aug 20 16:39 Dropbox\n", "drwx------@ 91 matidanish staff 2912 Aug 18 23:07 Library\n", "drwx------+ 16 matidanish staff 512 Jul 8 22:55 Movies\n", "drwx------+ 4 matidanish staff 128 Jun 3 19:11 Music\n", "drwxr-xr-x 9 matidanish staff 288 Feb 19 2022 My project\n", "drwx------ 4 matidanish staff 128 Aug 21 00:39 Parallels\n", "drwx------+ 8 matidanish staff 256 Nov 20 2021 Pictures\n", "drwxr-xr-x+ 4 matidanish staff 128 Apr 23 2021 Public\n", "-rw-r--r-- 1 matidanish staff 11488 Apr 27 18:31 SAP.py\n", "-rw-r--r--@ 1 matidanish staff 4396773 Jan 15 2020 Sad Piano Music (THIS WILL MAKE YOU CRY _ Saddest Piano & Violin Ever!)-aWIE0PX1uXk.mp3\n", "-rw-r--r--@ 1 matidanish staff 26022 Jan 16 2022 Untitled.txt\n", "-rw-r--r--@ 1 matidanish staff 120 Jan 16 2022 Untitled2.txt\n", "-rw-r--r--@ 1 matidanish staff 910 Aug 23 19:02 Untitled4.txt\n", "drwxr-xr-x 8 matidanish staff 256 Jul 7 13:54 VirtualBox VMs\n", "drwx------ 41 matidanish staff 1312 May 15 18:06 iCloud Drive (Archive)\n", "drwxr-xr-x 3 matidanish staff 96 Jan 15 2022 openvpn\n", "drwxr-xr-x 3 matidanish staff 96 Aug 18 21:32 opt\n", "-rw-r--r-- 1 matidanish staff 776264 Aug 22 12:51 untitled.blend\n", "drwxr-xr-x 4 matidanish staff 128 Aug 23 13:39 vscode\n", "\n", "look at config file\n", "cat: config: No such file or directory\n" ] }, { "ename": "", "evalue": "1", "output_type": "error", "traceback": [] } ], "source": [ "cd $project\n", "\n", "echo \"\"\n", "echo \"show the secrets of .git\"\n", "cd .git\n", "ls -l\n", "\n", "echo \"\"\n", "echo \"look at config file\"\n", "cat config" ] }, { "cell_type": "code", "execution_count": 7, "metadata": { "vscode": { "languageId": "shellscript" } }, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "\n", "File listing and status\n", "-rw-r--r-- 1 matidanish wheel 809 Aug 29 14:15 sample.md\n", " 15 132 809 sample.md\n", "bash: mdless: command not found\n" ] } ], "source": [ "cd /tmp\n", "\n", "file=\"sample.md\"\n", "if [ -f \"$file\" ]; then\n", " rm $file\n", "fi\n", "\n", "tee -a $file >/dev/null >) redirection operator.\" >> $file\n", "echo \"- The list definition, as is, is using space to seperate lines. Thus the use of commas and hyphens in output.\" >> $file\n", "actions=(\"ls,list-directory\" \"cd,change-directory\" \"pwd,present-working-directory\" \"if-then-fi,test-condition\" \"env,bash-environment-variables\" \"cat,view-file-contents\" \"tee,write-to-output\" \"echo,display-content-of-string\" \"echo_text_>\\$file,write-content-to-file\" \"echo_text_>>\\$file,append-content-to-file\")\n", "for action in ${actions[@]}; do # for loop is very similar to other language, though [@], semi-colon, do are new\n", " action=${action//-/ } # convert dash to space\n", " action=${action//,/: } # convert comma to colon\n", " action=${action//_text_/ \\\"sample text\\\" } # convert _text_ to sample text, note escape character \\ to avoid \"\" having meaning\n", " echo \" - ${action//-/ }\" >> $file # echo is redirected to file with >>\n", "done\n", "\n", "echo \"\"\n", "echo \"File listing and status\"\n", "ls -l $file # list file\n", "wc $file # show words\n", "mdless $file # this requires installation, but renders markown from terminal\n", "\n", "rm $file # clean up termporary file" ] } ], "metadata": { "kernelspec": { "display_name": "Bash", "language": "bash", "name": "bash" }, "language_info": { "codemirror_mode": "shell", "file_extension": ".sh", "mimetype": "text/x-sh", "name": "bash" }, "orig_nbformat": 4 }, "nbformat": 4, "nbformat_minor": 2 }]]></summary></entry><entry><title type="html">Vocab Wk1</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/29/Vocab-wk1.html" rel="alternate" type="text/html" title="Vocab Wk1" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/29/Vocab-wk1</id><author><name></name></author><summary type="html"><![CDATA[Vocab Week 1 All the vocab for week 1]]></summary></entry><entry><title type="html">Python Kernel</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/29/Python-kernel.ipynb" rel="alternate" type="text/html" title="Python Kernel" /><published>2022-08-29T00:00:00-05:00</published><updated>2022-08-29T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/29/Python-kernel</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "markdown", "metadata": {}, "source": [ "# \"Fastpage Test\"\n", "> \"Testing if i setup the fastpage correctly\"\n", "\n", "- toc: false\n", "- branch: master\n", "- badges: true\n", "- comments: true\n", "- author: Mati Danish\n", "- categories: [fastpages, jupyter]" ] } ], "metadata": { "kernelspec": { "display_name": "Python 3.10.1 64-bit", "language": "python", "name": "python3" }, "language_info": { "name": "python", "version": "3.10.1" }, "orig_nbformat": 4, "vscode": { "interpreter": { "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49" } } }, "nbformat": 4, "nbformat_minor": 2 }]]></summary></entry><entry><title type="html">Bash Output</title><link href="https://hsinaditam.github.io/Danish_Cookies/2022/08/25/bash-output.html" rel="alternate" type="text/html" title="Bash Output" /><published>2022-08-25T00:00:00-05:00</published><updated>2022-08-25T00:00:00-05:00</updated><id>https://hsinaditam.github.io/Danish_Cookies/2022/08/25/bash-output</id><author><name></name></author><summary type="html"><![CDATA[[core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [remote “origin”] url = https://github.com/nighthawkcoders/APCSP.git fetch = +refs/heads/:refs/remotes/origin/ [branch “master”] remote = origin merge = refs/heads/master bash-3.2$ ls]]></summary></entry></feed>